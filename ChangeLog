2015-01-21  Glenn Randers-Pehrson  <glennrp@simple.dallas.tx.us>

	* coders/png.c (ReadOnePNGImage): Use png_error() instead of
	throwing an exception so cleanup in the setjmp block can happen,
	including unlocking the semaphore.  Resolves Coverity CID 10232.

	* coders/png.c (ReadOnePNGImage): Moved a logging statement
	into a block where "attribute" has been checked for NULL.
	Resolves Coverity CID 10187.

	* coders/png.c (ReadMNGImage): Fixed a cut-and-paste typo
	(change_delay should be change_timeout) reported by Coverity
	 CID 10090.

2015-01-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* magick/image.c (CloneImage): The definition is poor as to what a
	non-orphan clone should do.  However, the definition surely does
	not include crashing the software or supplanting the original
	image in an image list.  Clone image blob and previous/next
	pointers but do not supplant original image in list.  Resolves
	Coverity CID 10155.

2015-01-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/dpx.c (WriteRowSamples): Ensure that callback function is
	always defined. Resolves Coverity CID 10122.
	(ReadRowSamples): Ensure that callback function is always
	defined. Resolves Coverity CID 10125.

	* magick/random.c (InitializeMagickRandomKernel): Avoid possible
	double-close of file.  Resolves Coverity CID 10257.

	* coders/histogram.c (WriteHISTOGRAMImage): Avoid possible divide
	by zero exception.  Resolves Coverity CID 10107.

	* magick/error.c (MagickFatalError): Document that
	MagickFatalError() is not supposed to return (program must quit)
	and add GCC/Clang hints to that effect.

	* magick/bit_stream.c (BitAndMasks): Avoid possible access
	one-beyond end of BitAndMasks array.  It is not clear if there is
	a possible bug with 32-bit quantums.  If there is a bug, it has
	not been noticed via testing.  Resolves Coverity CID 10213.

	* magick/tempfile.c (AcquireTemporaryFileDescriptor): Avoid buffer
	overrun in the case of an astonishingly long environment variable
	string.  Resolves Coverity CID 10267.
	(AddTemporaryFileToList): Use strlcpy() rather than strlcpy().  In
	practice, should not make a difference.  Will quiet Coverity CID
	10321.

	* magick/command.c (GMCommandSingle): Don't use the address of a
	stack allocation to update argv[0]. Removed updating argv[0] until
	a better design can be found.  Resolves Coverity CID 10223.
	(GMCommandSingle): Plan B: Use static allocation from
	SetClientName() to both store the new command name and provide
	storage for argv[0].

	* magick/utility.c (SystemCommand): Fix possible overwrite of
	memory location due to uninitialized 'end' pointer.  Resolves
	Coverity CID 10251.

	* magick/blob.c (WriteBlobFile): Was not closing file in certain
	error conditions.  Resolves Coverity CID 10237.

	* coders/cineon.c (ReadCINEONImage): Don't trust file header so
	much.  Resolves Coverity CIDs 10079, 10310, 10325.

	* coders/art.c (ReadARTImage): Fix signed vs unsigned comparison
	caused by earlier changes.

2014-01-17 Fojtik Jaroslav  <JaFojtik@seznam.cz>

	* coders/wpg.c Do not execute wpg raster read in ping mode.

2014-01-15 Fojtik Jaroslav  <JaFojtik@seznam.cz>

	* coders/mat.c Properly deallocating zip structures.

2015-01-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/sfw.c (ReadSFWImage): Fix pixel cache access errors in
	'ping' mode.

2015-01-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/wmf.c (ReadWMFImage): Fix memory leak in 'ping' mode and
	some error paths.

2015-01-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/jbig.c (ReadJBIGImage): Fix memory leak in 'ping' mode.

	* magick/delegate.c (InvokeDelegate): Fix memory leak of argument
	list when invoking external program via MagickSpawnVP().

2015-01-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* magick/resource.c (InitializeMagickResources): Base image width
	and height default limits on the range of a 32-bit signed integer,
	even for 64-bit builds.  These limits are still beyond what most
	computers in the world can handle.  Limits can be increased by the
	user.

	* coders/xwd.c (ReadXWDImage): Check image size limits
	immediately.

	* coders/xc.c (ReadXCImage): Check image size limits immediately.

	* coders/webp.c (ReadWEBPImage): Check image size limits
	immediately.

	* coders/viff.c (ReadVIFFImage): Check image size limits
	immediately.

	* coders/vicar.c (ReadVICARImage): Check image size limits
	immediately.

	* coders/txt.c (ReadTXTImage): Check image size limits
	immediately.

	* coders/ttf.c (ReadTTFImage): Check image size limits
	immediately.

	* coders/tim.c (ReadTIMImage): Check image size limits
	immediately.

	* coders/tiff.c (ReadTIFFImage): Check image size limits
	immediately.

	* coders/tga.c (ReadTGAImage): Check image size limits
	immediately.

	* coders/sgi.c (ReadSGIImage): Check image size limits
	immediately.

	* coders/sct.c (ReadSCTImage): Check image size limits
	immediately.

	* coders/rle.c (ReadRLEImage): Check image size limits
	immediately.

	* coders/rla.c (ReadRLAImage): Check image size limits
	immediately.

	* coders/psd.c (ReadPSDImage): Check image size limits
	immediately.

	* coders/pnm.c (ReadPNMImage): Check image size limits
	immediately.

	* coders/pix.c (ReadPIXImage): Check image size limits
	immediately.

	* coders/pict.c (ReadPICTImage): Check image size limits
	immediately.

	* coders/pdb.c (ReadPDBImage): Check image size limits
	immediately.

	* coders/pcx.c (ReadPCXImage): Check image size limits
	immediately.

	* coders/pcd.c (ReadPCDImage): Check image size limits
	immediately.

	* coders/otb.c (ReadOTBImage): Check image size limits
	immediately.

	* coders/null.c (ReadNULLImage): Check image size limits
	immediately.

	* coders/mvg.c (ReadMVGImage): Check image size limits
	immediately.

	* coders/mtv.c (ReadMTVImage): Check image size limits
	immediately.

	* coders/mpc.c (ReadMPCImage): Check image size limits
	immediately.

	* coders/miff.c (ReadMIFFImage): Check image size limits
	immediately.

	* coders/jpeg.c (ReadJPEGImage): Check image size limits
	immediately.

	* coders/jp2.c (ReadJP2Image): Check image size limits
	immediately.

	* coders/jbig.c (ReadJBIGImage): Check image size limits
	immediately.

	* coders/hdf.c (ReadHDFImage): Check image size limits
	immediately.

	* coders/gif.c (ReadGIFImage): Check image size limits
	immediately.

	* coders/fpx.c (ReadFPXImage): Check image size limits
	immediately.

	* coders/fax.c (ReadFAXImage): Check image size limits
	immediately.

	* coders/dpx.c (ReadDPXImage): Check image size limits
	immediately.

	* coders/dps.c (ReadDPSImage): Check image size limits
	immediately.

	* coders/dib.c (ReadDIBImage): Check image size limits
	immediately.

	* coders/dcm.c (ReadDCMImage): Check image size limits
	immediately.

	* coders/cut.c (ReadCUTImage): Check image size limits
	immediately.

	* coders/cineon.c (ReadCINEONImage): Check image size limits
	immediately.

	* coders/avs.c (ReadAVSImage): Check image size limits
	immediately.

	* coders/art.c (ReadARTImage): Check image size limits
	immediately.

	* coders/sun.c (ReadSUNImage): Check image size limits in advance
	of allocating memory for pixels.

	* coders/bmp.c (ReadBMPImage): Check image size limits in advance
	of allocating memory for pixels.

	* coders/sun.c (ReadSUNImage): There is no definition for Sun map
	type RMT_RAW so it can not be supported.  Update DirectClass
	pixels directly rather using SyncImage().  Problem was reported by
	Jodie Cunningham.

2015-01-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/pict.c (ReadPICTImage): Fix PICT reader crash when
	reading corrupted file.

	* coders/sun.c (ReadSUNImage): Sun reader was still not as robust
	as it should be.  Now it is.

2014-01-10 Fojtik Jaroslav  <JaFojtik@seznam.cz>

	* coders/wpg.c Fixed reading behind EOF issue.

2015-01-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/dpx.c (LSBPackedU32WordToOctets): Fix typo which adds
	severe corruption to encoded little-endian 32-bit packed output.
	The good news is that since the corruption is severe, it is easily
	visually detected.  The problem has corrupted all such
	(little-endian 10-bit) output since it was originally implemented
	on 2007-06-17 (changeset 11686, first released in GraphicsMagick
	1.1.8).  GraphicsMagick preserves the endianness of input DPX
	files by default, defaults to big-endian, and DPX files are
	commonly big-endian, so this problem may not have occured for many
	usages.  Problem was reported by Steve Dabner on the
	GraphicsMagick discussion mailing list.

2015-01-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* magick/magick.c (MagickPanicSignalHandler): Print a message in
	the case of signals SIGXCPU and SIGXFSZ.

	* coders/bmp.c (ReadBMPImage): Don't hang in endless loop if EOF
	is encountered while checking for "BA" header.

	* coders/icon.c (ReadIconImage): Limit icon image allocation size.

2015-01-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/icon.c (ReadIconImage): Removed all of the
	previously-existing DIB reading code from icon.c and use new
	"ICODIB" reader to read DIB icons, or the PNG reader to read PNG
	icons.

	* coders/dib.c (ReadDIBImage): Added an "ICODIB" coder for
	internal use which reads a Windows BMP 3 DIB followed by a Windows
	ICO alpha mask.  This allows existing DIB code to be used to read
	ICO directory entries.

2015-01-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* coders/icon.c: The Windows ICO reader is now more robust.  Still
	a work in progress since some files still can not be read or read
	incorrectly.

2015-01-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* magick/resource.c (ListMagickResourceInfo): "kilo" for binary
	prefixes is supposed to be "Ki".

	* magick/utility.c (FormatSize): "kilo" for binary prefixes is
	supposed to be "Ki".

2015-01-01  Glenn Randers-Pehrson  <glennrp@simple.dallas.tx.us>

	* coders/png.c: Use WidthResource and HeightResource instead
	of fixed 1-million limit for rows and columns.

2015-01-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* magick/utility.c (FormatSize): Add 'i' to value range
	identifiers since these are all in units of 2^10 rather than 1000.

	* magick/pixel_cache.c (CheckImagePixelLimits): Fix typo and
	produce an informative error message.

	* magick/resource.c: Added support for Image width and height
	pixels resource limits.

	* magick/resource.h (ResourceType): New resource enumerations
	WidthResource and HeightResource.

	* magick/enum_strings.c (StringToResourceType): Added support for
	parsing '-limit Width' and '-limit Height'.

	* magick/pixel_cache.c (CheckImagePixelLimits): New function to
	test image to see if it exceeds pixels limits.

	* coders/viff.c (ReadVIFFImage): Make the VIFF reader robust with
	detecting and reporting problems.

2014-12-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>

	* Rotate Changelog for new year.  Update documentation copyrights
	for new year.



